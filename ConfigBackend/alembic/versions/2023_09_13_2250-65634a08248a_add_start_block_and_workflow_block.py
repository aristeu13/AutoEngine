"""add start block and workflow block

Revision ID: 65634a08248a
Revises: 
Create Date: 2023-09-13 22:50:17.967282

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = "65634a08248a"
down_revision = None  # type: ignore
branch_labels = None  # type: ignore
depends_on = None  # type: ignore


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.execute(sa.text('CREATE EXTENSION IF NOT EXISTS "uuid-ossp"'))
    op.create_table(
        "workflow_block",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column(
            "block_type", sa.Enum("END", "DECISION", name="blocktype"), nullable=False
        ),
        sa.Column("decision_value", sa.Boolean(), nullable=True),
        sa.Column("field", sa.String(), nullable=True),
        sa.Column(
            "condition_type",
            sa.Enum("EQ", "GT", "GE", "LT", "LE", name="conditiontype"),
            nullable=True,
        ),
        sa.Column("true_workflow_block_id", sa.Uuid(), nullable=True),
        sa.Column("false_workflow_block_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["false_workflow_block_id"],
            ["workflow_block.id"],
        ),
        sa.ForeignKeyConstraint(
            ["true_workflow_block_id"],
            ["workflow_block.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "start_block",
        sa.Column(
            "id",
            sa.Uuid(),
            server_default=sa.text("uuid_generate_v4()"),
            nullable=False,
        ),
        sa.Column("workflow_block_id", sa.Uuid(), nullable=True),
        sa.ForeignKeyConstraint(
            ["workflow_block_id"],
            ["workflow_block.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("start_block")
    op.drop_table("workflow_block")
    op.execute(sa.text('DROP EXTENSION IF EXISTS "uuid-ossp"'))
    op.execute(sa.text("DROP TYPE IF EXISTS blocktype"))
    op.execute(sa.text("DROP TYPE IF EXISTS conditiontype"))
    # ### end Alembic commands ###
